#!/usr/bin/python

"""
Нам даны строки, содержащие скобки 4 видов - круглые (), квадратные [], фигурные {} и угловые <>. 
Задача в том, чтобы проверить является ли последовательность скобок корректной. 
Т.е. любая открывающая скобка должна иметь закрывающую того же типа где-то дальше по строке - и кроме того пары скобок не должны пересекаться,
хотя они могут быть вложенными:

(a+[b*c] - {d/3})  - здесь квадратные и фигурные скобки вложены в круглые

(a+[b*c) - 17]     - а здесь "область действия" круглых и квадратных пересекается, что некорректно

Входные данные указывают количество тестов в первой строке.

Далее идет указанное количество строк, содержащих по одной символьной последовательности.

Ответ должен содержать для каждого теста 1 если скобки расставлены верно или 0 если нет.

Пример:

входные данные:
4 
(a+[b*c]-{d/3})
(a + [b * c) - 17]
(((a * x) + [b] * y) + c 
auf(zlo)men [gy] four{s}

ответ: 1 0 0 1


http://www.codeabbey.com/index/task_view/matching-brackets--ru

"""

import re

# test = int(input())

lines = ['(a+[b*c]-{d/3})', '(a + [b * c) - 17]', '(((a * x) + [b] * y) + c ', 'auf(zlo)men [gy] four{s}']
bracket = [];#{"{":0,"}":0,"[":0,"]":0,"(":0,")":0}
opens = ["[","{","("]
closes = ["]","}",")"]
# for i in range(test):
#     line = input()
#     lines.append(line)

# print (lines)

for line in lines:

    for w in list(line):
        result = re.match(r'[\(,\[,\{,\},\],\)]', w) 
        if( result ):
            br = result.group(0)
            print(br)
            if(br in opens):
                bracket.append(br)
            elif (br in closes):
                bracket.pop(br)
                